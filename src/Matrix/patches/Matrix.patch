diff -ur Matrix/src/Makevars Matrix_new/src/Makevars
--- Matrix/src/Makevars	2020-02-15 17:44:50.000000000 +0000
+++ Matrix_new/src/Makevars	2022-02-22 10:46:12.349116803 +0000
@@ -4,7 +4,7 @@
 ## we use the BLAS and the LAPACK library:
 PKG_LIBS = $(SUBLIBS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
 
-MkInclude = $(R_HOME)/etc${R_ARCH}/Makeconf
+MkInclude = $(PWD)/Makeconf
 
 include scripts/SOURCES_C.mkf
 
--- /dev/null	2022-01-25 23:02:12.136479304 +0000
+++ Matrix_new/src/Makeconf	2022-02-22 10:51:44.794363645 +0000
@@ -0,0 +1,196 @@
+# etc/Makeconf.  Generated from Makeconf.in by configure.
+#
+# ${R_HOME}/etc/Makeconf
+#
+# R was configured using the following call
+# (not including env. vars and site configuration)
+# configure  '--prefix=/root/webR/R-4.1.2' '--with-x=no' '--with-readline=no' '--with-jpeglib=no' '--with-cairo=no' '--disable-openmp' '--with-recommended-packages=no' '--enable-R-profiling=no' '--with-pcre2' '--disable-nls' '--enable-byte-compiled-packages=no' 'CC=clang' 'FC=gfortran-4.6' 'CXX=clang++'
+
+## This fails if it contains spaces, or if it is quoted
+include $(R_SHARE_DIR)/make/vars.mk
+
+AR = emar
+BLAS_LIBS = /app/build/R-4.1.2/src/extra/blas/libRblas.a
+C_VISIBILITY = -fvisibility=hidden
+CC = emcc -std=gnu11
+CFLAGS = -g -O2 $(LTO)
+CPICFLAGS = -fpic
+CPPFLAGS = -I/usr/local/include
+CXX = em++ -std=gnu++11
+CXXFLAGS = -g -O2 $(LTO)
+CXXPICFLAGS = -fpic
+CXX11 = em++
+CXX11FLAGS = -g -O2 $(LTO)
+CXX11PICFLAGS = -fpic
+CXX11STD = -std=gnu++11
+CXX14 = 
+CXX14FLAGS =  $(LTO)
+CXX14PICFLAGS = 
+CXX14STD = 
+CXX17 = 
+CXX17FLAGS =  $(LTO)
+CXX17PICFLAGS = 
+CXX17STD = 
+CXX20 = 
+CXX20FLAGS =  $(LTO)
+CXX20PICFLAGS = 
+CXX20STD = 
+CXX_VISIBILITY = -fvisibility=hidden
+DYLIB_EXT = .so
+DYLIB_LD = $(CC)
+DYLIB_LDFLAGS = -shared  -pthread# $(CFLAGS) $(CPICFLAGS) 
+## should be used by packges for dylibs, but at the time of writing was not
+DYLIB_LINK = $(DYLIB_LD) $(DYLIB_LDFLAGS) $(LDFLAGS)
+ECHO = echo
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+F_VISIBILITY = -fvisibility=hidden
+## FC is the compiler used for all Fortran as from R 3.6.0
+FC = gfortran-4.6
+FCFLAGS = -g -O2 $(LTO_FC)
+## additional libs needed when linking with $(FC), e.g. on some Oracle compilers
+FCLIBS_XTRA = 
+FFLAGS = -g -O2 $(LTO_FC)
+FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/4.6 -lgfortran -lm -lquadmath
+FPICFLAGS = -fpic
+FOUNDATION_CPPFLAGS = 
+FOUNDATION_LIBS = 
+JAR = 
+JAVA = 
+JAVAC = 
+JAVAH = 
+## JAVA_HOME might be used in the next three.  
+## They are for packages 'JavaGD' and 'rJava'
+JAVA_HOME = 
+JAVA_CPPFLAGS = 
+JAVA_LIBS = 
+JAVA_LD_LIBRARY_PATH = 
+LAPACK_LIBS = /app/build/R-4.1.2/src/modules/lapack/libRlapack.a
+LDFLAGS = -L/usr/local/lib
+## we only need this is if it is external, as otherwise link to R
+LIBINTL= 
+LIBM = -lm
+LIBR0 = 
+LIBR1 = 
+LIBR =  
+LIBS =  -lpcre2-8 -llzma -lbz2 -lz -lrt -ldl -lm
+## needed by R CMD config
+LIBnn = lib
+LIBTOOL = $(SHELL) "$(R_HOME)/bin/libtool"
+## set for --enable-lto, --enable-lto=check
+LTO = 
+LTO_FC = 
+LTO_LD = 
+## set for --enable-lto=R, used in INSTALL
+LTO_OPT = 
+LTO_FC_OPT = 
+## needed to build applications linking to static libR
+MAIN_LD = $(CC)
+MAIN_LDFLAGS = -Wl,--export-dynamic  -pthread
+MAIN_LINK = $(MAIN_LD) $(MAIN_LDFLAGS) $(LDFLAGS)
+MKINSTALLDIRS = "$(R_HOME)/bin/mkinstalldirs"
+NM = /usr/bin/nm -B
+OBJC = 
+OBJCFLAGS =  $(LTO)
+OBJC_LIBS = 
+OBJCXX = 
+R_ARCH = 
+RANLIB = ranlib
+SAFE_FFLAGS = -g -O2 -msse2 -mfpmath=sse
+SED = /usr/bin/sed
+SHELL = /bin/bash
+SHLIB_CFLAGS = 
+SHLIB_CXXFLAGS = 
+SHLIB_CXXLD = $(CXX)
+SHLIB_CXXLDFLAGS = -shared# $(CXXFLAGS) $(CXXPICFLAGS) $(LTO_LD)
+SHLIB_CXX11LD = $(CXX11) $(CXX11STD)
+SHLIB_CXX11LDFLAGS = -shared# $(CXX11FLAGS) $(CXX11PICFLAGS) $(LTO_LD)
+SHLIB_CXX14LD = $(CXX14) $(CXX14STD)
+SHLIB_CXX14LDFLAGS = -shared# $(CXX14FLAGS) $(CXX14PICFLAGS) $(LTO_LD)
+SHLIB_CXX17LD = $(CXX17) $(CXX17STD)
+SHLIB_CXX17LDFLAGS = -shared# $(CXX17FLAGS) $(CXX17PICFLAGS) $(LTO_LD)
+SHLIB_CXX20LD = $(CXX20) $(CXX20STD)
+SHLIB_CXX20LDFLAGS = -shared# $(CXX20FLAGS) $(CXX20PICFLAGS) $(LTO_LD)
+SHLIB_EXT = .so
+SHLIB_FCLD = $(FC)
+SHLIB_FCLDFLAGS = -shared# $(FCFLAGS) $(FPICFLAGS)
+SHLIB_FFLAGS = 
+SHLIB_LD = $(CC)
+## used for add-on packages linked by C
+SHLIB_LDFLAGS = -shared# $(CFLAGS) $(CPICFLAGS) $(LTO_LD)
+## used for standard packages
+SHLIB_LDFLAGS_R = -shared# $(CFLAGS) $(CPICFLAGS) $(LTO_LD)
+SHLIB_LIBADD = 
+## We want to ensure libR is picked up from $(R_HOME)/lib
+## before e.g. /usr/local/lib if a version is already installed.
+SHLIB_LINK = $(SHLIB_LD) $(SHLIB_LDFLAGS) $(LIBR0) $(LDFLAGS)
+SHLIB_OPENMP_CFLAGS = 
+SHLIB_OPENMP_CXXFLAGS = 
+SHLIB_OPENMP_FFLAGS = 
+STRIP_STATIC_LIB = strip --strip-debug
+STRIP_SHARED_LIB = strip --strip-unneeded
+TCLTK_CPPFLAGS = 
+TCLTK_LIBS = 
+YACC = yacc
+
+## for linking to libR.a
+STATIC_LIBR = # -Wl,--whole-archive "$(R_HOME)/lib$(R_ARCH)/libR.a" -Wl,--no-whole-archive $(BLAS_LIBS) $(FLIBS)  $(LIBINTL)  $(LIBS)
+
+## These are recorded as macros for legacy use in packages
+## set on AIX, formerly for old glibc (-D__NO_MATH_INLINES)
+R_XTRA_CFLAGS = 
+##  was formerly set on HP-UX
+R_XTRA_CPPFLAGS =  -I"$(R_INCLUDE_DIR)" -DNDEBUG
+## currently unset
+R_XTRA_CXXFLAGS = 
+## used for gfortran in R > 3.6.0
+R_XTRA_FFLAGS = 
+
+## SHLIB_CFLAGS SHLIB_CXXFLAGS SHLIB_FFLAGS are apparently currently unused
+## SHLIB_CXXFLAGS is undocumented, there is no SHLIB_FCFLAGS
+ALL_CFLAGS =  $(PKG_CFLAGS) $(CPICFLAGS) $(SHLIB_CFLAGS) $(CFLAGS)
+ALL_CPPFLAGS =  -I"$(R_INCLUDE_DIR)" -DNDEBUG $(PKG_CPPFLAGS) $(CLINK_CPPFLAGS) $(CPPFLAGS) 
+ALL_CXXFLAGS =  $(PKG_CXXFLAGS) $(CXXPICFLAGS) $(SHLIB_CXXFLAGS) $(CXXFLAGS)
+ALL_OBJCFLAGS = $(PKG_OBJCFLAGS) $(CPICFLAGS) $(SHLIB_CFLAGS) $(OBJCFLAGS)
+ALL_OBJCXXFLAGS = $(PKG_OBJCXXFLAGS) $(CXXPICFLAGS) $(SHLIB_CXXFLAGS) $(OBJCXXFLAGS)
+ALL_FFLAGS =  $(PKG_FFLAGS) $(FPICFLAGS) $(SHLIB_FFLAGS) $(FFLAGS)
+## can be overridden by R CMD SHLIB
+P_FCFLAGS = $(PKG_FFLAGS)
+ALL_FCFLAGS =  $(P_FCFLAGS) $(FPICFLAGS) $(SHLIB_FFLAGS) $(FCFLAGS)
+## LIBR here as a couple of packages use this without SHLIB_LINK
+ALL_LIBS = $(PKG_LIBS) $(SHLIB_LIBADD) $(LIBR)# $(LIBINTL)
+
+.SUFFIXES:
+.SUFFIXES: .c .cc .cpp .d .f .f90 .f95 .m .mm .M .o
+
+.c.o:
+	$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) -c $< -o $@
+.c.d:
+	@echo "making $@ from $<"
+	@$(CC) -MM $(ALL_CPPFLAGS) $< > $@
+.cc.o:
+	$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -c $< -o $@
+.cpp.o:
+	$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -c $< -o $@
+.cc.d:
+	@echo "making $@ from $<"
+	@$(CXX) -M $(ALL_CPPFLAGS) $< > $@
+.cpp.d:
+	@echo "making $@ from $<"
+	@$(CXX) -M $(ALL_CPPFLAGS) $< > $@
+.m.o:
+	$(OBJC) $(ALL_CPPFLAGS) $(ALL_OBJCFLAGS) -c $< -o $@
+.m.d:
+	@echo "making $@ from $<"
+	@clang -std=gnu11 -E -M $(ALL_CPPFLAGS) $< > $@
+.mm.o:
+	$(OBJCXX) $(ALL_CPPFLAGS) $(ALL_OBJCXXFLAGS) -c $< -o $@
+.M.o:
+	$(OBJCXX) $(ALL_CPPFLAGS) $(ALL_OBJCXXFLAGS) -c $< -o $@
+.f.o:
+	$(FC) $(ALL_FFLAGS) -c $< -o $@
+.f95.o:
+	$(FC) $(ALL_FCFLAGS) -c  $< -o $@
+.f90.o:
+	$(FC) $(ALL_FCFLAGS) -c  $< -o $@
